name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        
      - name: Setup npm and install dependencies
        env:
          NPM_CONFIG_REGISTRY: https://registry.npmjs.org/
          NPM_CONFIG_ALWAYS_AUTH: false
        run: |
          # Remove any existing npm config files
          rm -f ~/.npmrc
          rm -f .npmrc
          # Create a clean .npmrc
          echo "registry=https://registry.npmjs.org/" > .npmrc
          echo "always-auth=false" >> .npmrc
          # Clear npm cache and config
          npm cache clean --force
          npm config delete //registry.npmjs.org/:_authToken || true
          # Install dependencies
          npm install --registry=https://registry.npmjs.org/
        
      - name: Build with Astro
        run: |
          npx astro build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
            
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4